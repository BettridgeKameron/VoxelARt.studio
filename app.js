import*as THREE from"three";import{OrbitControls}from"three/addons/controls/OrbitControls.js";import{ARButton}from"three/addons/webxr/ARButton.js";class VoxelWorld{constructor(e){this.cellSize=e.cellSize;const{cellSize:t}=this;this.cellSliceSize=t*t,this.cells={}}computeVoxelOffset(e,t,o){const{cellSize:n,cellSliceSize:r}=this,i=0|THREE.MathUtils.euclideanModulo(e,n);return(0|THREE.MathUtils.euclideanModulo(t,n))*r+(0|THREE.MathUtils.euclideanModulo(o,n))*n+i}computeCellId(e,t,o){const{cellSize:n}=this;return`${Math.floor(e/n)},${Math.floor(t/n)},${Math.floor(o/n)}`}addCellForVoxel(e,t,o){const n=this.computeCellId(e,t,o);let r=this.cells[n];if(!r){const{cellSize:e}=this;r=new Uint8Array(e*e*e),this.cells[n]=r}return r}getCellForVoxel(e,t,o){return this.cells[this.computeCellId(e,t,o)]}setVoxel(e,t,o,n,r=!0){let i=this.getCellForVoxel(e,t,o);if(!i){if(!r)return;i=this.addCellForVoxel(e,t,o)}i[this.computeVoxelOffset(e,t,o)]=n}getVoxel(e,t,o){const n=this.getCellForVoxel(e,t,o);if(!n)return 0;return n[this.computeVoxelOffset(e,t,o)]}generateGeometryDataForCell(e,t,o){const{cellSize:n}=this,r=[],i=[],l=[],s=[],a=e*n,c=t*n,d=o*n;for(let e=0;e<n;++e){const t=c+e;for(let o=0;o<n;++o){const c=d+o;for(let d=0;d<n;++d){const n=a+d,u=this.getVoxel(n,t,c);if(u){const a=[0,16777215,0,16711680,16733440,16755200,16776960,65280,65535,22015,255,16711935],h=u%a.length,f=new THREE.Color(a[h]);for(const{dir:a,corners:u}of VoxelWorld.faces){if(!this.getVoxel(n+a[0],t+a[1],c+a[2])){const t=r.length/3;for(const t of u)r.push(t[0]+d,t[1]+e,t[2]+o),i.push(...a),s.push(f.r,f.g,f.b);l.push(t,t+1,t+2,t+2,t+1,t+3)}}}}}}return{positions:r,normals:i,colors:s,indices:l}}intersectRay(e,t){let o=t.x-e.x,n=t.y-e.y,r=t.z-e.z;const i=o*o+n*n+r*r,l=Math.sqrt(i);o/=l,n/=l,r/=l;let s=0,a=Math.floor(e.x),c=Math.floor(e.y),d=Math.floor(e.z);const u=o>0?1:-1,h=n>0?1:-1,f=r>0?1:-1,m=Math.abs(1/o),w=Math.abs(1/n),p=Math.abs(1/r),E=u>0?a+1-e.x:e.x-a,g=h>0?c+1-e.y:e.y-c,x=f>0?d+1-e.z:e.z-d;let R=m<1/0?m*E:1/0,b=w<1/0?w*g:1/0,v=p<1/0?p*x:1/0,y=-1;for(;s<=l;){const t=this.getVoxel(a,c,d);if(t)return{position:[e.x+s*o,e.y+s*n,e.z+s*r],normal:[0===y?-u:0,1===y?-h:0,2===y?-f:0],voxel:t};R<b?R<v?(a+=u,s=R,R+=m,y=0):(d+=f,s=v,v+=p,y=2):b<v?(c+=h,s=b,b+=w,y=1):(d+=f,s=v,v+=p,y=2)}return null}serialize(){const e=Object.entries(this.cells).map((([e,t])=>({key:e,value:Array.from(t)})));return JSON.stringify({cellSize:this.cellSize,cells:e})}deserialize(e){const t=JSON.parse(e);this.cellSize=t.cellSize,this.cells=t.cells.reduce(((e,{key:t,value:o})=>(e[t]=new Uint8Array(o),e)),{})}}VoxelWorld.faces=[{dir:[-1,0,0],corners:[[0,1,0],[0,0,0],[0,1,1],[0,0,1]]},{dir:[1,0,0],corners:[[1,1,1],[1,0,1],[1,1,0],[1,0,0]]},{dir:[0,-1,0],corners:[[1,0,1],[0,0,1],[1,0,0],[0,0,0]]},{dir:[0,1,0],corners:[[0,1,1],[1,1,1],[0,1,0],[1,1,0]]},{dir:[0,0,-1],corners:[[1,0,0],[0,0,0],[1,1,0],[0,1,0]]},{dir:[0,0,1],corners:[[0,0,1],[1,0,1],[0,1,1],[1,1,1]]}];class Reticle extends THREE.Mesh{constructor(){super(new THREE.RingBufferGeometry(.1,.12,32).rotateX(-Math.PI/2),new THREE.MeshStandardMaterial({color:65280,emissive:65280,emissiveIntensity:.5,metalness:.1,roughness:.75,side:THREE.DoubleSide})),this.matrixAutoUpdate=!1,this.visible=!1}}function placeVoxelArtAtReticle(e,t,o){const{positions:n,normals:r,colors:i,indices:l}=o.generateGeometryDataForCell(0,0,0),s=new THREE.BufferGeometry;s.setAttribute("position",new THREE.BufferAttribute(new Float32Array(n),3)),s.setAttribute("normal",new THREE.BufferAttribute(new Float32Array(r),3)),s.setAttribute("color",new THREE.BufferAttribute(new Float32Array(i),3)),s.setIndex(l),s.computeBoundingBox();const a=new THREE.MeshLambertMaterial({vertexColors:!0,side:THREE.DoubleSide}),c=new THREE.Mesh(s,a),d=.01;c.scale.set(d,d,d);const u=d*-s.boundingBox.min.y,h=-.005*(s.boundingBox.max.x-s.boundingBox.min.x),f=-.005*(s.boundingBox.max.z-s.boundingBox.min.z);c.position.setFromMatrixPosition(e.matrix),c.position.y+=u,c.position.x+=h,c.position.z+=f,c.quaternion.setFromRotationMatrix(e.matrix),t.add(c)}function clearScene(e){const t=new Set(["Light","DirectionalLight","AmbientLight","Reticle"]);for(let o=e.children.length-1;o>=0;o--){const n=e.children[o];t.has(n.constructor.name)||e.remove(n)}}async function setupARButton(e,t,o){const n=ARButton.createButton(e,{requiredFeatures:["hit-test"]}),r=document.getElementById("arButtonCustom");let i;await navigator.xr.isSessionSupported("immersive-ar")&&(r.textContent="Enter AR",r.className="btn btn-success",r.disabled=!1,r.addEventListener("click",(()=>{document.body.appendChild(n),n.click()}))),e.xr.addEventListener("sessionstart",(async()=>{const n=e.xr.getSession();i=t.clone(),clearScene(i),i.background=null;const r=new Reticle;i.add(r);let l=!1;const s=await n.requestReferenceSpace("viewer"),a=await n.requestHitTestSource({space:s});e.setAnimationLoop((()=>{const t=e.xr.getFrame();if(t){const o=t.getHitTestResults(a);if(o.length>0){const t=o[0].getPose(e.xr.getReferenceSpace());t&&(r.visible=!l,r.matrix.fromArray(t.transform.matrix))}else r.visible=!1}e.render(i,o)})),n.addEventListener("select",(()=>{r.visible&&!l&&(placeVoxelArtAtReticle(r,i,world),l=!0,r.visible=!1)}))})),e.xr.addEventListener("sessionend",(()=>{document.getElementById("ARButton").remove(),e.setAnimationLoop(null),i.traverse((e=>{e.geometry&&e.geometry.dispose(),e.material&&e.material.dispose()})),e.render(t,o)}))}let world;function main(){const e=[],t=[],o=document.querySelector("#c"),n=new THREE.WebGLRenderer({antialias:!0,canvas:o,alpha:!0,preserveDrawingBuffer:!0});n.xr.enabled=!0;const r=32,i=new THREE.PerspectiveCamera(75,2,.1,1e3);i.position.set(.3*-r,.8*r,.3*-r);const l=new OrbitControls(i,o);l.target.set(r/2,r/3,r/2),l.update();const s=new THREE.Scene;function a(e,t,o,n,r,i){const l=new THREE.DirectionalLight(16777215,.45);l.position.set(e,t,o),l.target.position.set(n,r,i),s.add(l),s.add(l.target)}s.background=new THREE.Color("lightgrey"),a(-1,r,4,0,.5*r,0),a(1,r,-2,0,.5*r,0),function(){const e=new THREE.AmbientLight(16777215,.35);s.add(e)}(),world=new VoxelWorld({cellSize:r});const c=new THREE.MeshLambertMaterial({vertexColors:!0,side:THREE.DoubleSide,transparent:!1}),d={};function u(e,t,o){const n=Math.floor(e/r),i=Math.floor(t/r),l=Math.floor(o/r),a=world.computeCellId(e,t,o);let u=d[a];const h=u?u.geometry:new THREE.BufferGeometry,{positions:f,normals:m,colors:w,indices:p}=world.generateGeometryDataForCell(n,i,l);h.setAttribute("position",new THREE.BufferAttribute(new Float32Array(f),3));h.setAttribute("normal",new THREE.BufferAttribute(new Float32Array(m),3));h.setAttribute("color",new THREE.BufferAttribute(new Float32Array(w),3)),h.setIndex(p),h.computeBoundingSphere(),u||(u=new THREE.Mesh(h,c),u.name=a,d[a]=u,s.add(u),u.position.set(n*r,i*r,l*r))}const h=[[0,0,0],[-1,0,0],[1,0,0],[0,-1,0],[0,1,0],[0,0,-1],[0,0,1]];function f(e,t,o){const n={};for(const r of h){const i=e+r[0],l=t+r[1],s=o+r[2],a=world.computeCellId(i,l,s);n[a]||(n[a]=!0,u(i,l,s))}}function m(){for(let e=0;e<r;++e)for(let t=0;t<r;++t)world.setVoxel(t,0,e,1);f(1,1,1),p()}function w(){Object.keys(world.cells).forEach((e=>{const[t,o,n]=e.split(",").map(Number);u(t*world.cellSize,o*world.cellSize,n*world.cellSize)}))}function p(){const e=world.serialize();localStorage.setItem("worldData",e)}window.togglePlane=function(){0!==world.getVoxel(0,0,0)?function(){for(let e=0;e<r;++e)for(let t=0;t<r;++t)world.setVoxel(t,0,e,0);f(1,1,1),p()}():m()},function(){if(location.hash){const e=location.hash.substring(1);try{const t=atob(decodeURIComponent(e)),o=pako.inflate(t,{to:"string"});world.deserialize(o),w(),console.log("World loaded from URL hash."),localStorage.setItem("worldData",o),history.pushState("",document.title,location.pathname+location.search)}catch(e){console.error("Failed to load world from hash",e)}}else{const e=localStorage.getItem("worldData");e?(world.deserialize(e),w(),console.log("World loaded from local storage.")):m()}}(),window.resetWorld=function(){Object.keys(world.cells).forEach((e=>{world.cells[e].fill(0)})),Object.keys(world.cells).forEach((e=>{const[t,o,n]=e.split(",").map(Number);u(t*world.cellSize,o*world.cellSize,n*world.cellSize)})),m(),t.length=0,e.length=0,p(),console.log("World has been reset to initial state.")},document.querySelectorAll("#ui .tiles input[type=radio][name=voxel]").forEach((e=>{e.addEventListener("change",(function(){this.checked&&p()}))})),window.addEventListener("beforeunload",p);let E=!1;function g(){if(E=void 0,function(e){const t=e.domElement,o=t.clientWidth,n=t.clientHeight,r=t.width!==o||t.height!==n;return r&&e.setSize(o,n,!1),r}(n)){const e=n.domElement;i.aspect=e.clientWidth/e.clientHeight,i.updateProjectionMatrix()}l.update(),n.render(s,i)}function x(){E||(E=!0,requestAnimationFrame(g))}g();let R,b=-1;function v(n){if(-1===b)return;const r=function(e){const t=o.getBoundingClientRect();return{x:(e.clientX-t.left)*o.width/t.width,y:(e.clientY-t.top)*o.height/t.height}}(n),l=r.x/o.width*2-1,s=r.y/o.height*-2+1,a=new THREE.Vector3,c=new THREE.Vector3;a.setFromMatrixPosition(i.matrixWorld),c.set(l,s,1).unproject(i);const d=world.intersectRay(a,c);if(d){const o=n.shiftKey?0:b,r=d.position.map(((e,t)=>e+d.normal[t]*(o>0?.5:-.5)));e.push(world.serialize()),t.length=0,e.length>100&&e.shift(),world.setVoxel(...r,o),f(...r),x()}}document.querySelectorAll("#ui .tiles input[type=radio][name=voxel]").forEach((e=>{e.addEventListener("click",(function(){this.id===R?(this.checked=!1,R=void 0,b=-1):(R=this.id,b=parseInt(this.value))}))})),window.undo=function(){if(e.length>0){const o=e.pop();t.push(world.serialize()),world.deserialize(o),w(),x()}},window.redo=function(){if(t.length>0){const o=t.pop();e.push(world.serialize()),world.deserialize(o),w(),x()}};const y={x:0,y:0};function S(e){y.moveX+=Math.abs(y.x-e.clientX),y.moveY+=Math.abs(y.y-e.clientY)}function z(e){y.moveX<5&&y.moveY<5&&v(e),window.removeEventListener("pointermove",S),window.removeEventListener("pointerup",z)}o.addEventListener("pointerdown",(e=>{e.preventDefault(),function(e){y.x=e.clientX,y.y=e.clientY,y.moveX=0,y.moveY=0}(e),window.addEventListener("pointermove",S),window.addEventListener("pointerup",z)}),{passive:!1}),o.addEventListener("touchstart",(e=>{e.preventDefault()}),{passive:!1}),l.addEventListener("change",x),window.addEventListener("resize",x),n.setAnimationLoop((()=>{n.render(s,i)})),setupARButton(n,s,i)}function serializeToBase64(){const e=world.serialize(),t=pako.deflate(e,{to:"string"});return encodeURIComponent(btoa(t))}function getShareURL(){return`${location.origin}${location.pathname}#${serializeToBase64()}`}function exportWorldQRCode(){if(!world)return void console.error("World is not initialized.");const e=getShareURL();QRCode.toCanvas(document.getElementById("qrCanvas"),e,(function(e){e?console.error("QR Code Error: ",e):console.log("QR code successfully generated!")}))}window.exportWorldQRCode=exportWorldQRCode,window.getShareURL=getShareURL,main();