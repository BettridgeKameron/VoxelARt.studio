import*as THREE from"three";import{OrbitControls}from"three/addons/controls/OrbitControls.js";import{ARButton}from"three/addons/webxr/ARButton.js";class VoxelWorld{constructor(e){this.cellSize=e.cellSize;const{cellSize:t}=this;this.cellSliceSize=t*t,this.cells={}}computeVoxelOffset(e,t,o){const{cellSize:r,cellSliceSize:l}=this,n=0|THREE.MathUtils.euclideanModulo(e,r);return(0|THREE.MathUtils.euclideanModulo(t,r))*l+(0|THREE.MathUtils.euclideanModulo(o,r))*r+n}computeCellId(e,t,o){const{cellSize:r}=this;return`${Math.floor(e/r)},${Math.floor(t/r)},${Math.floor(o/r)}`}addCellForVoxel(e,t,o){const r=this.computeCellId(e,t,o);let l=this.cells[r];if(!l){const{cellSize:e}=this;l=new Uint8Array(e*e*e),this.cells[r]=l}return l}getCellForVoxel(e,t,o){return this.cells[this.computeCellId(e,t,o)]}setVoxel(e,t,o,r,l=!0){let n=this.getCellForVoxel(e,t,o);if(!n){if(!l)return;n=this.addCellForVoxel(e,t,o)}n[this.computeVoxelOffset(e,t,o)]=r}getVoxel(e,t,o){const r=this.getCellForVoxel(e,t,o);if(!r)return 0;return r[this.computeVoxelOffset(e,t,o)]}generateGeometryDataForCell(e,t,o){const{cellSize:r}=this,l=[],n=[],i=[],s=[],c=e*r,a=t*r,d=o*r;for(let e=0;e<r;++e){const t=a+e;for(let o=0;o<r;++o){const a=d+o;for(let d=0;d<r;++d){const r=c+d,u=this.getVoxel(r,t,a);if(u){const c=[0,16777215,0,16711680,16733440,16755200,16776960,65280,65535,5084415,255,16711935];document.querySelectorAll(".custom-color").forEach(((e,t)=>{c.push(parseInt(e.dataset.color.replace("#","0x"),16))}));const m=u%c.length,h=new THREE.Color(c[m]);for(const{dir:c,corners:u}of VoxelWorld.faces){if(!this.getVoxel(r+c[0],t+c[1],a+c[2])){const t=l.length/3;for(const t of u)l.push(t[0]+d,t[1]+e,t[2]+o),n.push(...c),s.push(h.r,h.g,h.b);i.push(t,t+1,t+2,t+2,t+1,t+3)}}}}}}return{positions:l,normals:n,colors:s,indices:i}}intersectRay(e,t){let o=t.x-e.x,r=t.y-e.y,l=t.z-e.z;const n=o*o+r*r+l*l,i=Math.sqrt(n);o/=i,r/=i,l/=i;let s=0,c=Math.floor(e.x),a=Math.floor(e.y),d=Math.floor(e.z);const u=o>0?1:-1,m=r>0?1:-1,h=l>0?1:-1,f=Math.abs(1/o),g=Math.abs(1/r),w=Math.abs(1/l),E=u>0?c+1-e.x:e.x-c,p=m>0?a+1-e.y:e.y-a,S=h>0?d+1-e.z:e.z-d;let b=f<1/0?f*E:1/0,v=g<1/0?g*p:1/0,y=w<1/0?w*S:1/0,x=-1;for(;s<=i;){const t=this.getVoxel(c,a,d);if(t)return{position:[e.x+s*o,e.y+s*r,e.z+s*l],normal:[0===x?-u:0,1===x?-m:0,2===x?-h:0],voxel:t};b<v?b<y?(c+=u,s=b,b+=f,x=0):(d+=h,s=y,y+=w,x=2):v<y?(a+=m,s=v,v+=g,x=1):(d+=h,s=y,y+=w,x=2)}return null}serialize(){const e=Object.entries(this.cells).map((([e,t])=>({key:e,value:Array.from(t)}))),t=document.querySelectorAll(".custom-color"),o=Array.from(t).map((e=>e.dataset.color)),r=bgColorPicker.value;return JSON.stringify({cellSize:this.cellSize,cells:e,customColors:o,backgroundColor:r})}deserialize(e){const t=JSON.parse(e);this.cellSize=t.cellSize,this.cells=t.cells.reduce(((e,{key:t,value:o})=>(e[t]=new Uint8Array(o),e)),{});const o=document.querySelectorAll(".custom-color");t.customColors.forEach(((e,t)=>{o[t].dataset.color=e,o[t].style.backgroundColor=e})),bgColorPicker.value=t.backgroundColor;const r=new CustomEvent("customColorsUpdated",{detail:t.customColors});document.dispatchEvent(r)}}VoxelWorld.faces=[{dir:[-1,0,0],corners:[[0,1,0],[0,0,0],[0,1,1],[0,0,1]]},{dir:[1,0,0],corners:[[1,1,1],[1,0,1],[1,1,0],[1,0,0]]},{dir:[0,-1,0],corners:[[1,0,1],[0,0,1],[1,0,0],[0,0,0]]},{dir:[0,1,0],corners:[[0,1,1],[1,1,1],[0,1,0],[1,1,0]]},{dir:[0,0,-1],corners:[[1,0,0],[0,0,0],[1,1,0],[0,1,0]]},{dir:[0,0,1],corners:[[0,0,1],[1,0,1],[0,1,1],[1,1,1]]}];class Reticle extends THREE.Mesh{constructor(){super(new THREE.RingBufferGeometry(.1,.12,32).rotateX(-Math.PI/2),new THREE.MeshStandardMaterial({color:65280,emissive:65280,emissiveIntensity:.5,metalness:.1,roughness:.75,side:THREE.DoubleSide})),this.matrixAutoUpdate=!1,this.visible=!1}}function placeVoxelArtAtReticle(e,t,o){const{positions:r,normals:l,colors:n,indices:i}=o.generateGeometryDataForCell(0,0,0),s=new THREE.BufferGeometry;s.setAttribute("position",new THREE.BufferAttribute(new Float32Array(r),3)),s.setAttribute("normal",new THREE.BufferAttribute(new Float32Array(l),3)),s.setAttribute("color",new THREE.BufferAttribute(new Float32Array(n),3)),s.setIndex(i),s.computeBoundingBox();const c=new THREE.MeshLambertMaterial({vertexColors:!0,side:THREE.DoubleSide}),a=new THREE.Mesh(s,c),d=.01;a.scale.set(d,d,d);const u=d*-s.boundingBox.min.y,m=-.005*(s.boundingBox.max.x-s.boundingBox.min.x),h=-.005*(s.boundingBox.max.z-s.boundingBox.min.z);a.position.setFromMatrixPosition(e.matrix),a.position.y+=u,a.position.x+=m,a.position.z+=h,a.quaternion.setFromRotationMatrix(e.matrix),t.add(a)}function clearScene(e){const t=new Set(["Light","DirectionalLight","AmbientLight","Reticle"]);for(let o=e.children.length-1;o>=0;o--){const r=e.children[o];t.has(r.constructor.name)||e.remove(r)}}async function setupARButton(e,t,o){const r=ARButton.createButton(e,{requiredFeatures:["hit-test"]}),l=document.getElementById("arButtonCustom");let n;await navigator.xr.isSessionSupported("immersive-ar")&&(l.textContent="Enter AR",l.className="btn btn-success",l.disabled=!1,l.addEventListener("click",(()=>{document.body.appendChild(r),r.click()}))),e.xr.addEventListener("sessionstart",(async()=>{const r=e.xr.getSession();n=t.clone(),clearScene(n),n.background=null;const l=new Reticle;n.add(l);let i=!1;const s=await r.requestReferenceSpace("viewer"),c=await r.requestHitTestSource({space:s});e.setAnimationLoop((()=>{const t=e.xr.getFrame();if(t){const o=t.getHitTestResults(c);if(o.length>0){const t=o[0].getPose(e.xr.getReferenceSpace());t&&(l.visible=!i,l.matrix.fromArray(t.transform.matrix))}else l.visible=!1}e.render(n,o)})),r.addEventListener("select",(()=>{l.visible&&!i&&(placeVoxelArtAtReticle(l,n,world),i=!0,l.visible=!1)}))})),e.xr.addEventListener("sessionend",(()=>{document.getElementById("ARButton").remove(),e.setAnimationLoop(null),n.traverse((e=>{e.geometry&&e.geometry.dispose(),e.material&&e.material.dispose()})),e.render(t,o)}))}let world;function main(){const e=[],t=[],o=document.querySelector("#c"),r=new THREE.WebGLRenderer({antialias:!0,canvas:o,alpha:!0,preserveDrawingBuffer:!0});r.xr.enabled=!0;const l=32,n=new THREE.PerspectiveCamera(75,2,.1,1e3);n.position.set(.3*-l,.8*l,.3*-l);const i=new OrbitControls(n,o);i.target.set(l/2,l/3,l/2),i.update();const s=document.getElementById("bgColorPicker"),c=new THREE.Scene,a=localStorage.getItem("bgColor")||"#d3d3d3";function d(e,t,o,r,l,n){const i=new THREE.DirectionalLight(16777215,.45);i.position.set(e,t,o),i.target.position.set(r,l,n),c.add(i),c.add(i.target)}s.value=a,c.background=new THREE.Color(a),s.addEventListener("input",(()=>{const e=s.value;c.background=new THREE.Color(e),localStorage.setItem("bgColor",e)})),d(-1,l,4,0,.5*l,0),d(1,l,-2,0,.5*l,0),function(){const e=new THREE.AmbientLight(16777215,.35);c.add(e)}(),world=new VoxelWorld({cellSize:l});const u=new THREE.MeshLambertMaterial({vertexColors:!0,side:THREE.DoubleSide,transparent:!1}),m={};function h(e,t,o){const r=Math.floor(e/l),n=Math.floor(t/l),i=Math.floor(o/l),s=world.computeCellId(e,t,o);let a=m[s];const d=a?a.geometry:new THREE.BufferGeometry,{positions:h,normals:f,colors:g,indices:w}=world.generateGeometryDataForCell(r,n,i);d.setAttribute("position",new THREE.BufferAttribute(new Float32Array(h),3));d.setAttribute("normal",new THREE.BufferAttribute(new Float32Array(f),3));d.setAttribute("color",new THREE.BufferAttribute(new Float32Array(g),3)),d.setIndex(w),d.computeBoundingSphere(),a||(a=new THREE.Mesh(d,u),a.name=s,m[s]=a,c.add(a),a.position.set(r*l,n*l,i*l))}const f=[[0,0,0],[-1,0,0],[1,0,0],[0,-1,0],[0,1,0],[0,0,-1],[0,0,1]];function g(e,t,o){const r={};for(const l of f){const n=e+l[0],i=t+l[1],s=o+l[2],c=world.computeCellId(n,i,s);r[c]||(r[c]=!0,h(n,i,s))}}function w(){for(let e=0;e<l;++e)for(let t=0;t<l;++t)world.setVoxel(t,0,e,1);g(1,1,1),S()}function E(){Object.keys(world.cells).forEach((e=>{const[t,o,r]=e.split(",").map(Number);g(t*world.cellSize,o*world.cellSize,r*world.cellSize)}))}function p(){Object.keys(world.cells).forEach((e=>{const[t,o,r]=e.split(",").map(Number);h(t*world.cellSize,o*world.cellSize,r*world.cellSize)}))}function S(){const e=world.serialize();localStorage.setItem("worldData",e)}window.togglePlane=function(){0!==world.getVoxel(0,0,0)?function(){for(let e=0;e<l;++e)for(let t=0;t<l;++t)world.setVoxel(t,0,e,0);g(1,1,1),S()}():w()},function(){if(location.hash){const e=location.hash.substring(1);try{const t=atob(decodeURIComponent(e)),o=pako.inflate(t,{to:"string"});world.deserialize(o),p(),E();const r=JSON.parse(o);c.background=new THREE.Color(r.backgroundColor);const l=document.querySelectorAll(".custom-color"),n=document.querySelectorAll("#colorPicker1, #colorPicker2, #colorPicker3");r.customColors.forEach(((e,t)=>{l[t].dataset.color=e,l[t].style.backgroundColor=e,n[t].value=e})),console.log("World loaded from URL hash."),localStorage.setItem("worldData",o),history.pushState("",document.title,location.pathname+location.search)}catch(e){console.error("Failed to load world from hash",e)}}else{const e=localStorage.getItem("worldData");if(e){world.deserialize(e),p(),E();const t=JSON.parse(e);c.background=new THREE.Color(t.backgroundColor),console.log("World loaded from local storage.")}else w()}}(),window.resetWorld=function(){Object.keys(world.cells).forEach((e=>{world.cells[e].fill(0)})),Object.keys(world.cells).forEach((e=>{const[t,o,r]=e.split(",").map(Number);h(t*world.cellSize,o*world.cellSize,r*world.cellSize)})),w(),t.length=0,e.length=0;const o="#d3d3d3";s.value=o,c.background=new THREE.Color(o),localStorage.setItem("bgColor",o),S(),console.log("World has been reset to initial state.")},document.querySelectorAll("#ui .tiles input[type=radio][name=voxel]").forEach((e=>{e.addEventListener("change",(function(){this.checked&&S()}))})),window.addEventListener("beforeunload",S);let b=!1;function v(){if(b=void 0,function(e){const t=e.domElement,o=t.clientWidth,r=t.clientHeight,l=t.width!==o||t.height!==r;return l&&e.setSize(o,r,!1),l}(r)){const e=r.domElement;n.aspect=e.clientWidth/e.clientHeight,n.updateProjectionMatrix()}i.update(),r.render(c,n)}function y(){b||(b=!0,requestAnimationFrame(v))}v();let x,C=-1;function R(r){if(-1===C)return;const l=function(e){const t=o.getBoundingClientRect();return{x:(e.clientX-t.left)*o.width/t.width,y:(e.clientY-t.top)*o.height/t.height}}(r),i=l.x/o.width*2-1,s=l.y/o.height*-2+1,c=new THREE.Vector3,a=new THREE.Vector3;c.setFromMatrixPosition(n.matrixWorld),a.set(i,s,1).unproject(n);const d=world.intersectRay(c,a);if(d){const o=r.shiftKey?0:C,l=d.position.map(((e,t)=>e+d.normal[t]*(o>0?.5:-.5)));e.push(world.serialize()),t.length=0,e.length>50&&e.shift(),world.setVoxel(...l,o),g(...l),y()}}document.querySelectorAll("#ui .tiles input[type=radio][name=voxel]").forEach((e=>{e.addEventListener("click",(function(){this.id===x?(this.checked=!1,x=void 0,C=-1):(x=this.id,C=parseInt(this.value))}))})),window.undo=function(){if(e.length>0){const o=e.pop();t.push(world.serialize()),world.deserialize(o),p(),y()}},window.redo=function(){if(t.length>0){const o=t.pop();e.push(world.serialize()),world.deserialize(o),p(),y()}};const A={x:0,y:0};function z(e){A.moveX+=Math.abs(A.x-e.clientX),A.moveY+=Math.abs(A.y-e.clientY)}function k(e){A.moveX<5&&A.moveY<5&&R(e),window.removeEventListener("pointermove",z),window.removeEventListener("pointerup",k)}o.addEventListener("pointerdown",(e=>{e.preventDefault(),function(e){A.x=e.clientX,A.y=e.clientY,A.moveX=0,A.moveY=0}(e),window.addEventListener("pointermove",z),window.addEventListener("pointerup",k)}),{passive:!1}),o.addEventListener("touchstart",(e=>{e.preventDefault()}),{passive:!1}),i.addEventListener("change",y),window.addEventListener("resize",y),r.setAnimationLoop((()=>{r.render(c,n)})),setupARButton(r,c,n);const H=document.querySelectorAll(".custom-color"),T=document.querySelectorAll("#colorPicker1, #colorPicker2, #colorPicker3"),I=JSON.parse(localStorage.getItem("customColors"))||["#000000","#000000"];H.forEach(((e,t)=>{e.dataset.color=I[t],e.style.backgroundColor=I[t]})),H.forEach(((e,t)=>{e.addEventListener("click",(()=>{T[t].click()}))})),T.forEach(((e,t)=>{e.value=H[t].dataset.color,e.addEventListener("input",(()=>{const o=e.value;H[t].dataset.color=o,H[t].style.backgroundColor=o,localStorage.setItem("customColors",JSON.stringify([H[0].dataset.color,H[1].dataset.color,H[2].dataset.color]))}))}));document.getElementById("resetBgColor").addEventListener("click",(()=>{const e="#d3d3d3";s.value=e,c.background=new THREE.Color(e),localStorage.setItem("bgColor",e)})),document.addEventListener("customColorsUpdated",(e=>{const t=e.detail;T.forEach(((e,o)=>{e.value=t[o]}))})),document.addEventListener("DOMContentLoaded",(function(){!function(){if(localStorage.getItem("bgColor")||localStorage.setItem("bgColor","#d3d3d3"),!localStorage.getItem("customColors")){const e=["#000000","#000000","#000000"];localStorage.setItem("customColors",JSON.stringify(e))}if(!localStorage.getItem("worldData")){const e={};localStorage.setItem("worldData",JSON.stringify(e))}document.getElementById("bgColorPicker").value=localStorage.getItem("bgColor");const e=JSON.parse(localStorage.getItem("customColors")),t=document.querySelectorAll("#colorPicker1, #colorPicker2, #colorPicker3"),o=document.querySelectorAll(".custom-color");e.forEach(((e,r)=>{t[r]&&(t[r].value=e),o[r]&&(o[r].style.backgroundColor=e,o[r].dataset.color=e)}))}(),world&&localStorage.getItem("worldData")&&world.deserialize(localStorage.getItem("worldData"))}))}function serializeToBase64(){const e=world.serialize(),t=pako.deflate(e,{to:"string"});return encodeURIComponent(btoa(t))}function getShareURL(){return`${location.origin}${location.pathname}#${serializeToBase64()}`}function exportWorldQRCode(){if(!world)return void console.error("World is not initialized.");const e=getShareURL();QRCode.toCanvas(document.getElementById("qrCanvas"),e,(function(e){e?console.error("QR Code Error: ",e):console.log("QR code successfully generated!")}))}window.exportWorldQRCode=exportWorldQRCode,window.getShareURL=getShareURL,main();